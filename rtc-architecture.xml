<?xml version="1.0" encoding="UTF-8"?>
<chapter xmlns="http://docbook.org/ns/docbook"
      xmlns:xlink="http://www.w3.org/1999/xlink" version="5.0"
      xml:id="rtc-architecture">
  <title>Architecture overview</title>

  <para>This chapter gives a high-level overview of the RTC architecture.
  Each component is explained in more detail in its own chapter.</para>

  <figure float="none" xml:id="arch-dia-1">
    <title>Overview</title>

    <mediaobject>
      <imageobject role="print">
        <imagedata fileref="figs/svg/arch-overview.svg" width="5in"
          format="SVG" />
      </imageobject>

      <imageobject role="web">
        <imagedata fileref="figs/svg/arch-overview.svg"
          format="SVG" />
      </imageobject>
    </mediaobject>
  </figure>

  <para><xref linkend="arch-dia-1"/> demonstrates each of the components
  and how they are interconnected.  The diagram includes an example of
  an external softphone user calling an internal softphone user, the call
  is setup with SIP and the RTP media streams (dotted lines) pass through
  the TURN server.</para>

  <figure float="none" xml:id="arch-dia-fed-sip">
    <title>SIP federation between two sites</title>

    <mediaobject>
      <imageobject role="print">
        <imagedata fileref="figs/svg/arch-fed-sip.svg" width="5in"
          format="SVG" />
      </imageobject>

      <imageobject role="web">
        <imagedata fileref="figs/svg/arch-fed-sip.svg"
          format="SVG" />
      </imageobject>
    </mediaobject>
  </figure>

  <para><xref linkend="arch-dia-fed-sip"/> emphasizes those components
  that are involved in routing a federated SIP call from one site,
  <emphasis>example.org</emphasis>, to another site,
  <emphasis>example.edu</emphasis>.  For simplicity, this diagram does
  not show the firewalls, soft PBX or other components.  Assuming the
  softphone users are both using NAT addresses, the TURN servers may be
  relaying all the media streams on their behalf.</para>

  <figure float="none" xml:id="arch-dia-webrtc-p2p">
    <title>WebRTC basic peer-to-peer</title>

    <mediaobject>
      <imageobject role="print">
        <imagedata fileref="figs/svg/arch-webrtc.svg" width="3in"
          format="SVG" />
      </imageobject>

      <imageobject role="web">
        <imagedata fileref="figs/svg/arch-webrtc.svg"
          format="SVG" />
      </imageobject>
    </mediaobject>
  </figure>

  <para><xref linkend="arch-dia-webrtc-p2p"/> demonstrates how two
  browsers can communicate with each other using WebRTC.  The web
  browsers start by downloading the HTML, CSS and JavaScript from a
  normal web server such as Apache <code>httpd</code>.  The JavaScript
  uses the WebSocket protocol to initiate a connection to the SIP proxy.
  When a call is made, the request is sent over the WebSocket connection
  and the media streams pass through the TURN server.  In this case, the
  browsers are not relaying the media streams through the TURN server,
  possibly because they have discovered they are both on the same
  IP network.</para>

  <figure float="none" xml:id="arch-dia-webrtc-call-center">
    <title>WebRTC from customer web browser to call center</title>

    <mediaobject>
      <imageobject role="print">
        <imagedata fileref="figs/svg/arch-webrtc-call-center.svg" width="5in"
          format="SVG" />
      </imageobject>

      <imageobject role="web">
        <imagedata fileref="figs/svg/arch-webrtc-call-center.svg"
          format="SVG" />
      </imageobject>
    </mediaobject>
  </figure>

  <para><xref linkend="arch-dia-webrtc-call-center"/> demonstrates a
  more elaborate WebRTC architecture, a customer using a web browser to
  call a corporate call center.  When a call is made, the request is
  sent over the WebSocket connection and the media streams pass through
  the TURN server.  The SIP proxy routes all calls to the corporate PBX
  which routes the calls to an agent.  The media streams must also pass
  through the PBX for transcoding from the Opus codec to one of the
  codecs supported by the desk phones, perhaps G.711 or G.722.</para>

</chapter>
